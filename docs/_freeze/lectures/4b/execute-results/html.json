{
  "hash": "6854d0e0b26c5c3e1b8f8149f5358b67",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nformat:\n  revealjs:\n    scrollable: true\n    theme: [default, styles.scss]\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: notes/chalkboard_1a.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: false\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\" \n    \nrevealjs-plugins:\n  - pointer\n  - verticator\n  \nfilters: \n  - reveal-header\n  - code-fullscreen\n  - reveal-auto-agenda\n  \nauto-agenda:\n  bullets: numbered\n  heading: Learning Outcomes\n  \neditor: visual\n---\n\n\n\n\n# Data Visualization\n\n## Histogram\n\nA histogram is a graphical representation of the distribution or frequency of data points in a dataset. It provides a visual way to understand the shape, central tendency, and spread of a dataset by dividing the data into intervals or bins and showing how many data points fall into each bin.\n\n## Histogram R Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~bill_length_mm, data = penguins)\n```\n:::\n\n\n## Histogram\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](4b_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Box Plot\n\nA box plot, also known as a box-and-whisker plot, is a graphical representation of the distribution and key statistical characteristics of a dataset. It provides a visual summary of the data's central tendency, spread, and potential outliers.\n\n## Box Plot\n\n![](https://miro.medium.com/max/9000/1*2c21SkzJMf3frPXPAR_gZA.png){fig-align=\"center\"}\n\n## Box Plot R Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_boxplot(~bill_length_mm, data = penguins)\n```\n:::\n\n\n## Box Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](4b_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n# Summarizing Categorical Variables\n\n## Categorical Variables\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n#> $species\n#>  [1] Adelie    Gentoo    Chinstrap Chinstrap Gentoo    Gentoo    Gentoo   \n#>  [8] Adelie    Adelie    Gentoo    Gentoo    Gentoo    Chinstrap Gentoo   \n#> [15] Chinstrap Chinstrap Gentoo    Chinstrap Adelie    Adelie   \n#> Levels: Adelie Chinstrap Gentoo\n```\n:::\n:::\n\n\n## Frequency Tables\n\nA frequency table is a statistical tool used to organize and summarize a set of data by counting the number of times each unique value or category appears within the dataset. It provides a simple and clear way to represent the distribution of data, particularly for categorical or discrete variables.\n\n## Relative Frequency\n\nRelative frequency is a statistical concept used to describe the proportion or percentage of times a particular event or outcome occurs relative to the total number of observations or occurrences in a dataset or sample.\n\n## Proportional Tables\n\nA proportion table is a type of statistical table used to display the relative frequencies or proportions of different categories within a dataset. It provides a way to represent the distribution of data in terms of percentages or proportions, making it easier to compare and understand the relative sizes of different categories.\n\n## Pie Charts\n\nA pie chart is a circular graphical representation used to display data in a way that illustrates the relative proportions or percentages of different categories or components within a whole. Pie charts are particularly useful for showing the composition of a dataset when you want to emphasize the parts of a whole and how they relate to each other.\n\n## Pie Charts R Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> ggplot(aes(x=\"\", fill = species)) + \n  geom_bar() + \n  coord_polar(\"y\")\n```\n:::\n\n\n## Pie Charts in R\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](4b_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Bar Charts\n\nA bar chart, also known as a bar graph, is a graphical representation used to display categorical data in a way that visually represents the values or frequencies of different categories by using rectangular bars. Bar charts are particularly effective for comparing and showing the relationships between distinct categories or groups.\n\n## Bar Charts R Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_bar(~species, data = penguins)\n```\n:::\n\n\n## Bar Charts R Code\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](4b_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n# Explaining Variation\n\n## Explaining Variation\n\n::: fragment\nThis is the process where we try to reduce the variation with the use of other variables.\n:::\n\n::: fragment\nCan be thought of as getting it less wrong when taking an educated guess.\n:::\n\n## Explaining Variation\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](4b_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Explaining Variation with One Variable\n\n## Explaining Variation with One Variable\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](4b_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## Outcome Variables\n\nThese are variables we want to study.\n\n::: fragment\nAlso known as outcome of interest.\n:::\n\n::: fragment\nAlso known as dependent variable.\n:::\n\n## Explanatory Variables\n\nThese are variable that explain the outcome of interest.\n\n::: fragment\nAlso known as predictor variable.\n:::\n\n::: fragment\nAlso known as independent variable.\n:::\n\n## Study Habits\n\n::: fragment\nThe first exam will be on September 25.\n:::\n\n::: fragment\nWhat are some study strategies that you can implement in this course?\n:::\n",
    "supporting": [
      "4b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}